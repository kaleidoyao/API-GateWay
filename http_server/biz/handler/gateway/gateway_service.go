// Code generated by hertz generator.

package gateway

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	calculate "github.com/kaleidoyao/http_server/biz/model/calculate"
	greeting "github.com/kaleidoyao/http_server/biz/model/greeting"
	reverse "github.com/kaleidoyao/http_server/biz/model/reverse"
)

// CalculateMethod .
// @router /calculate [POST]
func CalculateMethod(ctx context.Context, c *app.RequestContext) {
	var err error
	var req calculate.CalculateRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(calculate.CalculateResponse)

	c.JSON(consts.StatusOK, resp)
}

// GreetingMethod .
// @router /greeting [GET]
func GreetingMethod(ctx context.Context, c *app.RequestContext) {
	var err error
	var req greeting.GreetingRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(greeting.GreetingResponse)

	c.JSON(consts.StatusOK, resp)
}

// ReverseMethod .
// @router /reverse [POST]
func ReverseMethod(ctx context.Context, c *app.RequestContext) {
	var err error
	var req reverse.ReverseRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(reverse.ReverseResponse)

	c.JSON(consts.StatusOK, resp)
}
